security:
    # https://symfony.com/doc/current/security/authenticator_manager.html
    enable_authenticator_manager: false
    # https://symfony.com/doc/current/security.html#c-hashing-passwords
    password_hashers:
        #Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
        App\Entity\User:
            algorithm: auto
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        #my_chain:
        #    chain:
        #        providers: [ldap_provider, db_user_provider]
        db_user_provider:
            entity:
                class: App\Entity\User
                property: email
        #ldap_provider:
        #    ldap:
        #        service: ldap
        #        base_dn: 'blabla'
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        #admin:
        #    pattern: ^/admin
        #    provider: ldap_provider
        main:
            pattern: ^/
            lazy: true
            provider: db_user_provider
            anonymous: ~
            guard:
                authenticators:
                    - App\Security\FormLoginAuthenticator
                entry_point: App\Security\FormLoginAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/movie, roles: ROLE_USER }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/register, roles: IS_ANONYMOUS }
        #- { path: ^/register, allow_if: 'is_anonymous()' }
        #- { path: ^/, roles: ROLE_2FACTORS }
        #- { path: ^/(login|signup|2factors), roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/profile, roles: ROLE_USER }

    role_hierarchy:
        ROLE_USER:
            - ROLE_MOVIE_SHOW
        ROLE_MODERATOR:
            - ROLE_USER
            - ROLE_MOVIE_EDIT
            - ROLE_MOVIE_DELETE
            - ROLE_MOVIE_IMPORT
        ROLE_ADMIN:
            - ROLE_MODERATOR
